application.name=Acosix Transformer Base
application.version=${project.version}

application.ssl=false
application.ssl.certAlias=
application.ssl.includeProtocols=TLSv1.2,TLSv1.3
application.ssl.excludeProtocols=
application.ssl.includeCipherSuites=
application.ssl.excludeCipherSuites=
application.ssl.useCiperSuitesOrder=true
application.ssl.validateCerts=true
application.ssl.validatePeerCerts=true
application.ssl.crldpEnabled=false
application.ssl.ocspEnabled=false
application.ssl.ocspResponderUrl=
application.ssl.keystore.path=
application.ssl.keystore.provider=
application.ssl.keystore.type=
application.ssl.keystore.password=
application.ssl.keyManager.factoryAlgorithm=
application.ssl.keyManager.password=
application.ssl.truststore.path=
application.ssl.truststore.provider=
application.ssl.truststore.type=
application.ssl.truststore.password=
application.ssl.trustManager.factoryAlgorithm=
application.ssl.secureRandomAlgorithm=
application.ssl.trustAll=false
application.ssl.sniRequired=

application.host=localhost
application.bindHost=
application.port=
application.minThreads=5
application.maxThreads=200

application.requestLog.path=request.log
application.requestLog.retainDays=7
application.requestLog.format=%{yyyy-MM-dd'T'HH:mm:ssZZZ}t %X \"%r\" %I %s %{ms}T %O

application.multipartRequest.maxFileSize=-1
application.multipartRequest.maxRequestSize=-1

# 900s / 15m default timeout for transformations should be more than enough
application.default.transformTimeout=900000

localTransformationLog.maxEntries=100

# Share File Accessor URL
# if not set, transformer uses a local shared file store in its temporary files directory
sfs.url=
sfs.responseTimeoutMillis=5000

sfs.ssl.certAlias=
sfs.ssl.includeProtocols=${application.ssl.includeProtocols}
sfs.ssl.excludeProtocols=${application.ssl.excludeProtocols}
sfs.ssl.includeCipherSuites=${application.ssl.includeCipherSuites}
sfs.ssl.excludeCipherSuites=${application.ssl.excludeCipherSuites}
sfs.ssl.useCiperSuitesOrder=${application.ssl.useCiperSuitesOrder}
sfs.ssl.validateCerts=${application.ssl.validateCerts}
sfs.ssl.validatePeerCerts=${application.ssl.validatePeerCerts}
sfs.ssl.crldpEnabled=${application.ssl.crldpEnabled}
sfs.ssl.ocspEnabled=${application.ssl.ocspEnabled}
sfs.ssl.ocspResponderUrl=${application.ssl.ocspResponderUrl}
sfs.ssl.keystore.path=${application.ssl.keystore.path}
sfs.ssl.keystore.provider=${application.ssl.keystore.provider}
sfs.ssl.keystore.type=${application.ssl.keystore.type}
sfs.ssl.keystore.password=${application.ssl.keystore.password}
sfs.ssl.keyManager.factoryAlgorithm=${application.ssl.keyManager.factoryAlgorithm}
sfs.ssl.keyManager.password=${application.ssl.keyManager.password}
sfs.ssl.truststore.path=${application.ssl.truststore.path}
sfs.ssl.truststore.provider=${application.ssl.truststore.provider}
sfs.ssl.truststore.type=${application.ssl.truststore.type}
sfs.ssl.truststore.password=${application.ssl.truststore.password}
sfs.ssl.trustManager.factoryAlgorithm=${application.ssl.trustManager.factoryAlgorithm}
sfs.ssl.trustAll=${application.ssl.trustAll}
sfs.ssl.secureRandomAlgorithm=${application.ssl.secureRandomAlgorithm}