application.name=Acosix Misc Transformer
application.version=${project.version}

devtools.host=localhost
devtools.port=9222
devtools.connectTimeout=30000
devtools.connectLostTimeout=15

mailHtml.defaultTimezone=UTC
mailHtml.defaultLocale=en_GB
mailHtml.mailHeaderCss.resource=mailHeader.css
mailHtml.mailHeaderHtml.defaultResource=mailHeader_en.html
mailHtml.mailHeaderHtml.localisedResource.en=mailHeader_en.html
mailHtml.mailHeaderHtml.localisedResource.de=mailHeader_de.html

transformer.DevTools.transformerOptions=DevToolsPDF,DevToolsScreenshot
transformer.MailHtml.transformerOptions=MailHtml

transformerOptions.rootGroups=DevToolsPDF,DevToolsScreenshot,MailHtml

transformerOptions.element.DevToolsPDF.elements=pdfLandscape,pdfPrintBackground,pdfPreferCSSPageSize,pdfPageWidth,pdfPageHeight,pdfMarginTop,pdfMarginBottom,pdfMarginLeft,pdfMarginRight,pdfPageRanges,pdfIgnoreInvalidPageRanges,pdfHeaderTemplate,pdfFooterTemplate
transformerOptions.element.DevToolsScreenshot.elements=screenshotCompressionQuality,screenshotViewport
transformerOptions.element.MailHtml.elements=timezone,locale

transformerOptions.element.screenshotViewport.elements=screenshotViewportX,screenshotViewportY,screenshotViewportWidth,screenshotViewportHeight,screenshotViewportScale
transformerOptions.element.screenshotViewportWidth.required=true
transformerOptions.element.screenshotViewportHeight.required=true

transformerDefaultOptions.DevTools.pdfPageWidth=210
transformerDefaultOptions.DevTools.pdfPageHeight=297
transformerDefaultOptions.DevTools.pdfMarginTop=19.1
transformerDefaultOptions.DevTools.pdfMarginBottom=19.1
transformerDefaultOptions.DevTools.pdfMarginLeft=17.8
transformerDefaultOptions.DevTools.pdfMarginRight=17.8

# default screenshot viewport to A4 in device-independent (CSS) pixels (@96dpi)
transformerDefaultOptions.DevTools.screenshotViewportWidth=787
transformerDefaultOptions.DevTools.screenshotViewportHeight=1114

transformerDefaultOptions.MailHtml.timezone=${mailHtml.defaultTimezone}
transformerDefaultOptions.MailHtml.locale=${mailHtml.defaultLocale}

transformer.DevTools.sourceMimetypes=text/html,application/xhtml+xml,image/svg+xml
transformer.DevTools.targetMimetypes=application/pdf,image/png,image/jpeg

transformer.MailHtml.sourceMimetypes=message/rfc822
transformer.MailHtml.targetMimetypes=text/html,application/xhtml+xml

# Alfresco T-Engine config model + ACS-tier local transform handling is ridiculous and requires somewhat redundant definitions
# cannot convey default priority for pipeline/failover transformers without specifying explicitly supported source/target types
# failover do not support failover if single transformer in failover list is not resolveable
# failover and pipelines do not automatically combine transformerOptions of constituents
# failover blindly processes failover list without checking if step even supports provided options
# registry is unaware of what options pipelines and failover may drop due to direct reference to local transform (which silently strips unsupported inbound options)

# so we have pipelines for best flexibility wrt unrestricted target types and specific option combinations using default priority
# and other pipelines for simple priority overrides over e.g. LibreOffice transformers for specific target types + option combinations 
pipelineTransformers=DevToolsWebToAnyImageViaPng,\
    DevToolsWebToAnyImageViaPdf,\
    DevToolsWebToPngJpegViaPngPrioOverride,\
    DevToolsWebToPngJpegViaPdfPrioOverride,\
    MailHtmlToPdfViaDevTools,\
    MailHtmlToAnyImageViaDevToolsPng,\
    MailHtmlToAnyImageViaDevToolsPdf,\
    MailHtmlToPngJpegViaDevToolsPngPrioOverride,\
    MailHtmlToPngJpegViaDevToolsPdfPrioOverride

pipelineTransformer.MailHtmlToPdfViaDevTools.transformerNames=MailHtml,DevTools
pipelineTransformer.MailHtmlToPdfViaDevTools.intermediateTypes=text/html
pipelineTransformer.MailHtmlToPdfViaDevTools.transformerOptions=MailHtml,DevToolsPDF
pipelineTransformer.MailHtmlToPdfViaDevTools.sourceMimetypes=${transformer.MailHtml.sourceMimetypes}
pipelineTransformer.MailHtmlToPdfViaDevTools.targetMimetypes=application/pdf

pipelineTransformer.DevToolsWebToAnyImageViaPng.transformerNames=DevTools,imagemagick
pipelineTransformer.DevToolsWebToAnyImageViaPng.intermediateTypes=image/png
pipelineTransformer.DevToolsWebToAnyImageViaPng.transformerOptions=DevToolsScreenshot,imageMagickOptions

pipelineTransformer.MailHtmlToAnyImageViaDevToolsPng.transformerNames=MailHtml,DevToolsWebToAnyImageViaPng
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPng.intermediateTypes=text/html
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPng.transformerOptions=MailHtml,${pipelineTransformer.DevToolsWebToAnyImageViaPng.transformerOptions}
# would prefer our own MailHtmlToAnyImageViaDevToolsPng to be preferred over any default pipelines (via text/plain)
# but without explicitly setting every supported source-target combination (removing flexibility), this priority is actually without effect (documentation only)
# we force it for select mimetypes in a separate prio override pipeline though
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPng.default.priority=48

pipelineTransformer.DevToolsWebToAnyImageViaPdf.transformerNames=DevTools,pdfToImageViaPng
pipelineTransformer.DevToolsWebToAnyImageViaPdf.intermediateTypes=application/pdf
pipelineTransformer.DevToolsWebToAnyImageViaPdf.transformerOptions=DevToolsPDF,pdfRendererOptions,imageMagickOptions
# would prefer our own DevToolsWebToAnyImageViaPng unless pdfRendererOptions specified
# but without explicitly setting every supported source-target combination (removing flexibility), this priority is actually without effect (documentation only)
pipelineTransformer.DevToolsWebToAnyImageViaPdf.default.priority=51

pipelineTransformer.MailHtmlToAnyImageViaDevToolsPdf.transformerNames=MailHtml,DevToolsWebToAnyImageViaPdf
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPdf.intermediateTypes=text/html
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPdf.transformerOptions=MailHtml,${pipelineTransformer.DevToolsWebToAnyImageViaPdf.transformerOptions}
# would prefer our own MailHtmlToAnyImageViaDevToolsPng to be preferred over any default pipelines (via text/plain)
# but without explicitly setting every supported source-target combination (removing flexibility), this priority is actually without effect (documentation only)
# we force it for select mimetypes in a separate prio override pipeline though
pipelineTransformer.MailHtmlToAnyImageViaDevToolsPdf.default.priority=49

pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.transformerNames=DevTools,imagemagick
pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.intermediateTypes=image/png
pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.transformerOptions=DevToolsScreenshot,imageMagickOptions
pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.sourceMimetypes=${transformer.DevTools.sourceMimetypes}
pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.targetMimetypes=image/png,image/jpeg

pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.transformerNames=MailHtml,DevToolsWebToPngJpegViaPngPrioOverride
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.intermediateTypes=text/html
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.transformerOptions=MailHtml,${pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.transformerOptions}
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.sourceMimetypes=${transformer.MailHtml.sourceMimetypes}
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.targetMimetypes=${pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.targetMimetypes}

pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.transformerNames=DevTools,pdfToImageViaPng
pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.intermediateTypes=application/pdf
pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.transformerOptions=DevToolsPDF,pdfRendererOptions,imageMagickOptions
pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.sourceMimetypes=${transformer.DevTools.sourceMimetypes}
pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.targetMimetypes=image/png,image/jpeg

pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.transformerNames=MailHtml,DevToolsWebToPngJpegViaPdfPrioOverride
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.intermediateTypes=text/html
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.transformerOptions=MailHtml,${pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.transformerOptions}
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.sourceMimetypes=${transformer.MailHtml.sourceMimetypes}
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.targetMimetypes=${pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.targetMimetypes}

# higher priorities than default some transformers / pipelines

# vs htmlToPdfViaOdt
# vs libreofficeHtmlToPdfViaOdt
transformer.DevTools.text/html.application/pdf.priority=49

# vs htmlToImageViaPdf
# vs textBasedToImageViaText
# prefer the more direct variants unless imageMagickOptions and/or pdfRendererOptions specified
transformer.DevTools.*.image/png.priority=47
transformer.DevTools.*.image/jpeg.priority=47
pipelineTransformer.DevToolsWebToPngJpegViaPngPrioOverride.default.priority=48
pipelineTransformer.DevToolsWebToPngJpegViaPdfPrioOverride.default.priority=49

# vs rfc822ToPdf
pipelineTransformer.MailHtmlToPdfViaDevTools.message/rfc822.application/pdf.priority=49

# vs rfc822ToImage
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPngPrioOverride.default.priority=48
pipelineTransformer.MailHtmlToPngJpegViaDevToolsPdfPrioOverride.default.priority=49